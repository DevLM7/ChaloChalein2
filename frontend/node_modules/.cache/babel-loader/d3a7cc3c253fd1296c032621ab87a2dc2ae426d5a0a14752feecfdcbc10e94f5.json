{"ast":null,"code":"var _jsxFileName = \"D:\\\\ChaloChalein\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/AuthPage.jsx\nimport React, { useState } from 'react';\nimport { Form, Input, Button, message, Navigate } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async values => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/auth/login', {\n        email: values.email,\n        password: values.password\n      });\n      if (response.data.success) {\n        localStorage.setItem('user', JSON.stringify({\n          email: values.email\n        }));\n        message.success('Logged in successfully!');\n        setRedirect(true); // Set redirect to true\n      }\n    } catch (error) {\n      message.error('Login failed. Please check your credentials.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this); // Redirect to Chatbot\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input your email!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"ekERM9vKl9Nna4hZgyCuKXCqKi0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","Form","Input","Button","message","Navigate","useNavigate","axios","jsxDEV","_jsxDEV","AuthPage","_s","loading","setLoading","redirect","setRedirect","navigate","handleLogin","values","response","post","email","password","data","success","localStorage","setItem","JSON","stringify","error","to","fileName","_jsxFileName","lineNumber","columnNumber","onFinish","children","Item","name","rules","required","placeholder","Password","type","htmlType","_c","$RefreshReg$"],"sources":["D:/ChaloChalein/frontend/src/App.js"],"sourcesContent":["// src/AuthPage.jsx\nimport React, { useState } from 'react';\nimport { Form, Input, Button, message, Navigate } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AuthPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (values) => {\n    setLoading(true);\n    try {\n      const response = await axios.post('http://localhost:8000/api/auth/login', {\n        email: values.email,\n        password: values.password,\n      });\n      if (response.data.success) {\n        localStorage.setItem('user', JSON.stringify({ email: values.email }));\n        message.success('Logged in successfully!');\n        setRedirect(true); // Set redirect to true\n      }\n    } catch (error) {\n      message.error('Login failed. Please check your credentials.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (redirect) {\n    return <Navigate to=\"/chatbot\" />; // Redirect to Chatbot\n  }\n\n  return (\n    <Form onFinish={handleLogin}>\n      <Form.Item name=\"email\" rules={[{ required: true, message: 'Please input your email!' }]}>\n        <Input placeholder=\"Email\" />\n      </Form.Item>\n      <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]}>\n        <Input.Password placeholder=\"Password\" />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AuthPage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,MAAM;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMgB,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAG,MAAOC,MAAM,IAAK;IACpCL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,sCAAsC,EAAE;QACxEC,KAAK,EAAEH,MAAM,CAACG,KAAK;QACnBC,QAAQ,EAAEJ,MAAM,CAACI;MACnB,CAAC,CAAC;MACF,IAAIH,QAAQ,CAACI,IAAI,CAACC,OAAO,EAAE;QACzBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP,KAAK,EAAEH,MAAM,CAACG;QAAM,CAAC,CAAC,CAAC;QACrEjB,OAAO,CAACoB,OAAO,CAAC,yBAAyB,CAAC;QAC1CT,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdzB,OAAO,CAACyB,KAAK,CAAC,8CAA8C,CAAC;IAC/D,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAIC,QAAQ,EAAE;IACZ,oBAAOL,OAAA,CAACJ,QAAQ;MAACyB,EAAE,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACrC;EAEA,oBACEzB,OAAA,CAACR,IAAI;IAACkC,QAAQ,EAAElB,WAAY;IAAAmB,QAAA,gBAC1B3B,OAAA,CAACR,IAAI,CAACoC,IAAI;MAACC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEpC,OAAO,EAAE;MAA2B,CAAC,CAAE;MAAAgC,QAAA,eACvF3B,OAAA,CAACP,KAAK;QAACuC,WAAW,EAAC;MAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACZzB,OAAA,CAACR,IAAI,CAACoC,IAAI;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAEpC,OAAO,EAAE;MAA8B,CAAC,CAAE;MAAAgC,QAAA,eAC7F3B,OAAA,CAACP,KAAK,CAACwC,QAAQ;QAACD,WAAW,EAAC;MAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACZzB,OAAA,CAACR,IAAI,CAACoC,IAAI;MAAAD,QAAA,eACR3B,OAAA,CAACN,MAAM;QAACwC,IAAI,EAAC,SAAS;QAACC,QAAQ,EAAC,QAAQ;QAAChC,OAAO,EAAEA,OAAQ;QAAAwB,QAAA,EAAC;MAE3D;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAACvB,EAAA,CA3CID,QAAQ;EAAA,QAGKJ,WAAW;AAAA;AAAAuC,EAAA,GAHxBnC,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}